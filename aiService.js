const axios = require("axios");

// H√†m g·ªçi Gemini AI
async function callGemini(prompt) {
    try {
        const res = await axios.post(
            `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent?key=${process.env.GEMINI_API_KEY}`,
            { contents: [{ parts: [{ text: prompt }] }] }
        );

        const aiReply = res.data?.candidates?.[0]?.content?.parts?.[0]?.text;
        return (aiReply || "Xin l·ªói, t√¥i kh√¥ng c√≥ th√¥ng tin v·ªÅ ƒëi·ªÅu n√†y.").toString();
    } catch (err) {
        console.error("‚ö†Ô∏è L·ªói AI:", err.response?.data || err.message);
        return "Xin l·ªói, t√¥i kh√¥ng c√≥ th√¥ng tin v·ªÅ ƒëi·ªÅu n√†y.";
    }
}

// H√†m g·ªçi AI d·ª±a tr√™n d·ªØ li·ªáu t·ª´ Google Sheets + LearnedFAQ
async function callGeminiWithSheet(userMessage, sheetData = []) {
    // T·∫°o knowledge base t·ª´ d·ªØ li·ªáu
    const context = sheetData
        .map(row => `${row[0] || ""}: ${row[1] || ""}`)
        .join("\n");

    const prompt = `
B·∫°n l√† m·ªôt nh√¢n vi√™n t∆∞ v·∫•n chuy√™n nghi·ªáp c·ªßa ·ª©ng d·ª•ng. 
H√£y tr·∫£ l·ªùi t·ª± nhi√™n, l·ªãch s·ª±, th√¢n thi·ªán, gi·ªëng nh√¢n vi√™n t∆∞ v·∫•n th·ª±c th·ª•.
B·∫°n c√≥ th·ªÉ d·ª±a v√†o d·ªØ li·ªáu d∆∞·ªõi ƒë√¢y t·ª´ Google Sheets v√† c√°c c√¢u h·ªèi ƒë√£ h·ªçc:

${context}

Ng∆∞·ªùi d√πng h·ªèi: "${userMessage || ""}"

üëâ Nhi·ªám v·ª•:  
- Tr·∫£ l·ªùi r√µ r√†ng, chi ti·∫øt, th√¢n thi·ªán nh∆∞ nh√¢n vi√™n t∆∞ v·∫•n.  
- N·∫øu kh√¥ng c√≥ th√¥ng tin trong d·ªØ li·ªáu, h√£y n√≥i: "Xin l·ªói, hi·ªán t·∫°i t√¥i ch∆∞a c√≥ th√¥ng tin n√†y".  
- Kh√¥ng b·ªãa c√¢u tr·∫£ l·ªùi, ch·ªâ d·ª±a v√†o d·ªØ li·ªáu c√≥ s·∫µn.
`;

    return await callGemini(prompt);
}

module.exports = { callGemini, callGeminiWithSheet };
