const axios = require("axios");
const stringSimilarity = require("string-similarity");
const { getSheetData, appendSheetData } = require("./googleSheets");

// H√†m g·ªçi Gemini AI
async function callGemini(prompt) {
    try {
        const res = await axios.post(
            `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent?key=${process.env.GEMINI_API_KEY}`,
            { contents: [{ parts: [{ text: prompt }] }] }
        );

        return res.data.candidates?.[0]?.content?.parts?.[0]?.text || "Xin l·ªói, t√¥i kh√¥ng hi·ªÉu.";
    } catch (err) {
        console.error("‚ö†Ô∏è L·ªói AI:", err.response?.data || err.message);
        return "Xin l·ªói, t√¥i kh√¥ng hi·ªÉu.";
    }
}

// H√†m g·ªçi Gemini v·ªõi d·ªØ li·ªáu FAQ v√† LearnedFAQ
async function callGeminiWithSheet(userMessage, faqData, learnedData, sheetId) {
    // 1Ô∏è‚É£ Ki·ªÉm tra LearnedFAQ tr∆∞·ªõc (h·ªçc t·ª´ c√¢u h·ªèi tr∆∞·ªõc ƒë√≥)
    if (learnedData?.length) {
        const learnedQuestions = learnedData.map(row => row[0]);
        const bestMatch = stringSimilarity.findBestMatch(userMessage, learnedQuestions);
        if (bestMatch.bestMatch.rating > 0.5) {
            const idx = learnedQuestions.indexOf(bestMatch.bestMatch.target);
            return learnedData[idx][1]; // tr·∫£ l·ªùi ngay t·ª´ LearnedFAQ
        }
    }

    // 2Ô∏è‚É£ Ki·ªÉm tra FAQ g·ªëc
    if (faqData?.length) {
        const faqQuestions = faqData.map(row => row[0]);
        const bestMatch = stringSimilarity.findBestMatch(userMessage, faqQuestions);
        if (bestMatch.bestMatch.rating > 0.5) {
            const idx = faqQuestions.indexOf(bestMatch.bestMatch.target);
            return faqData[idx][1]; // tr·∫£ l·ªùi ngay t·ª´ FAQ
        }
    }

    // 3Ô∏è‚É£ N·∫øu kh√¥ng match, g·ªçi AI
    const faqText = faqData.map(row => `${row[0]}: ${row[1]}`).join("\n");
    const prompt = `
B·∫°n l√† nh√¢n vi√™n t∆∞ v·∫•n b√°n h√†ng. 
D∆∞·ªõi ƒë√¢y l√† d·ªØ li·ªáu t·ª´ Google Sheets:

${faqText}

Ng∆∞·ªùi d√πng h·ªèi: "${userMessage}"

üëâ Tr·∫£ l·ªùi t·ª± nhi√™n, l·ªãch s·ª±, ch·ªâ d·ª±a tr√™n d·ªØ li·ªáu trong Google Sheets.
N·∫øu kh√¥ng t√¨m th·∫•y th√¥ng tin, h√£y n√≥i "Xin l·ªói, hi·ªán t·∫°i t√¥i ch∆∞a c√≥ th√¥ng tin n√†y".
`;

    const reply = await callGemini(prompt);

    // 4Ô∏è‚É£ L∆∞u c√¢u h·ªèi + c√¢u tr·∫£ l·ªùi m·ªõi v√†o LearnedFAQ
    if (sheetId) {
        try {
            await appendSheetData(sheetId, "LearnedFAQ", [userMessage, reply]);
        } catch (err) {
            console.error("‚ùå L·ªói l∆∞u LearnedFAQ:", err.message);
        }
    }

    return reply;
}

module.exports = { callGemini, callGeminiWithSheet };
